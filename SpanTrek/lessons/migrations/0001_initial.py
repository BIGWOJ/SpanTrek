# Generated by Django 5.1.6 on 2025-08-15 17:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdventureLesson",
            fields=[
                (
                    "lesson_id",
                    models.AutoField(
                        help_text="Auto-incrementing lesson identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("order", models.IntegerField(default=1)),
                ("experience_points", models.IntegerField(default=10)),
                (
                    "required_score",
                    models.IntegerField(
                        default=75, help_text="Minimum score to pass (percentage)"
                    ),
                ),
            ],
            options={
                "ordering": ["country", "order"],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Vocabulary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("word", models.CharField(max_length=100)),
                ("translation", models.CharField(max_length=100)),
                ("pronunciation", models.CharField(blank=True, max_length=150)),
                ("definition", models.TextField(blank=True)),
                ("example_sentence", models.TextField(blank=True)),
                ("audio_url", models.URLField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Vocabulary",
                "ordering": ["word"],
            },
        ),
        migrations.CreateModel(
            name="AdventureLessonContent",
            fields=[
                (
                    "content_id",
                    models.AutoField(
                        help_text="Unique content block identifier",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                (
                    "content_text",
                    models.TextField(
                        blank=True,
                        help_text="Main content text for the lesson",
                        null=True,
                    ),
                ),
                (
                    "media_url",
                    models.URLField(
                        blank=True,
                        help_text="URL for images, audio, or video",
                        null=True,
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_blocks",
                        to="lessons.adventurelesson",
                    ),
                ),
            ],
            options={
                "ordering": ["lesson", "order"],
            },
        ),
        migrations.AddField(
            model_name="adventurelesson",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="lessons.country"
            ),
        ),
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exercise_type",
                    models.CharField(
                        choices=[
                            ("single_choice", "Single Choice"),
                            ("multiple_choice", "Multiple Choice"),
                            ("fill_blank", "Fill in the Blank"),
                            ("matching", "Matching"),
                            ("translation", "Translation"),
                            ("audio_comprehension", "Audio Comprehension"),
                            ("speaking", "Speaking Practice"),
                        ],
                        max_length=30,
                    ),
                ),
                ("question", models.TextField()),
                ("instructions", models.TextField(blank=True)),
                (
                    "correct_answers",
                    models.JSONField(
                        help_text="Correct answer(s) - format depends on exercise type"
                    ),
                ),
                (
                    "choices",
                    models.JSONField(
                        blank=True, default=list, help_text="Multiple choice options"
                    ),
                ),
                ("points", models.IntegerField(default=1)),
                ("order", models.IntegerField(default=1)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exercises",
                        to="lessons.adventurelesson",
                    ),
                ),
            ],
            options={
                "ordering": ["lesson", "order"],
            },
        ),
        migrations.CreateModel(
            name="UserLessonProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_started", models.BooleanField(default=False)),
                ("is_completed", models.BooleanField(default=False)),
                ("score", models.IntegerField(default=0)),
                ("max_score", models.IntegerField(default=0)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("time_spent", models.DurationField(blank=True, null=True)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_progress",
                        to="lessons.adventurelesson",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lesson_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "lesson")},
            },
        ),
    ]
